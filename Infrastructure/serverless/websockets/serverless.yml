service: webSockets

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

plugins:
  - serverless-webpack

package:
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'development'}
  region: ${opt:region, 'us-east-1'}
  stackName: ${self:service}-${self:provider.stage}
  timeout: 29
  profile: ZachTerraform
  apiGateway:
    shouldStartNameWithService: true
      
functions:
  WebsocketConnect:
    handler: lambdas/connect/connect.executeConnect
    name: '${self:service}-WebsocketConnect'
    events:
      - websocket:
          route: $connect
  WebsocketDisconnect:
    handler: lambdas/disconnect/disconnect.executeDisconnect
    name: '${self:service}-WebsocketDisconnect'
    events:
      - websocket:
          route: $disconnect
  WebsocketDefault:
    handler: lambdas/default/default.executeDefault
    name: '${self:service}-WebsocketDefault'
    events:
      - websocket:
          route: $default
  SomeLambda:
    handler: lambdas/someLambda/someLambda.executeSomeLambda
    name: '${self:service}-WebsocketSomeLambda'
    events:
      - websocket:
          route: someLambda
  LargePayload:
    handler: lambdas/largePayload/largePayload.executeLargePayload
    name: '${self:service}-WebsocketLargePayload'
    events:
      - websocket:
          route: largePayload
          